class Solution {
public:
    //TC: O(n! * n)  SC: O(n!)
    void getPerms(vector<int>& nums , int idx ,  vector<vector<int>> &ans){
        if(idx == nums.size()){
            ans.push_back({nums});
            return;
        }

        for(int i = idx; i< nums.size(); i++){
            swap(nums[idx] , nums[i]); //we are swapping idx with i'th position
            getPerms(nums , idx+1 , ans);

            swap(nums[idx] , nums[i]);// => Backtracking
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
            vector<vector<int>> ans;
            getPerms(nums, 0 , ans);
            return ans;
    }
};
