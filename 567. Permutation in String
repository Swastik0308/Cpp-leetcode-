class Solution { //in this question there are only lower case characters but if there are all the characters with special and numbers , instead of integer array we use unordered_map and the logic is same
public:
bool isFreqSame(int freq1[] , int freq2[]){ //O(1) bcz we know there are only 26 characters
    for(int i =0 ; i<26;i++){
        if(freq1[i] != freq2[i]){
            return false;
        }
    }
    return true;
}
    bool checkInclusion(string s1, string s2) {
        int freq[26] = {0};

        for(int i = 0;i<s1.length();i++){
            freq[s1[i] - 'a']++; //a --> 1 , b-->1
        }

        int windSize = s1.length();
        for(int i=0 ; i< s2.length();i++){
            int windIdx = 0 , idx = i;
            int windFreq[26] = {0};

            while(windIdx < windSize && idx < s2.length()){
                    windFreq[s2[idx] - 'a']++;
                    windIdx++; idx++;
            }

            if(isFreqSame(freq , windFreq)){ //found
                return true;
            }
        }

        return false;

    }
};
